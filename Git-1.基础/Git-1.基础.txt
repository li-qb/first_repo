h1. 1、Git是什么？

Git 是一个免费开源的分布式版本控制系统。

h2. 1.1、集中式和分布式版本控制系统有什么区别？

集中式版本控制系统
> 有一个单一的集中管理的服务器，保存所有文件的修订版本，而协同工作的人们都通过客户端连到这台服务器，取出最新的文件或者提交更新。 
!centralized.png!

分布式版本控制系统
> 客户端并不只提取最新版本的文件快照，而是把代码仓库完整地镜像下来。 这么一来，任何一处协同工作用的服务器发生故障，事后都可以用任何一个镜像出来的本地仓库恢复。 因为每一次的克隆操作，实际上都是一次对代码仓库的完整备份。
!distributed.png!

h1. 2、初次运行 Git 前的配置

因为Git是分布式版本控制系统，所以，每个机器都必须自报家门，当安装完 Git 应该做的第一件事就是设置你的用户名称与邮件地址。
!setup.png!
!name.png!

h1. 3、获取 Git 仓库

*有两种取得 Git 项目仓库的方法。 
第一种是在现有项目或目录下导入所有文件到 Git 中。*

>$ git init

或者

!init.png!
该命令将创建一个名为 .git 的子目录，这个子目录含有你初始化的 Git 仓库中所有的必须文件。在这个时候，我们仅仅是做了一个初始化的操作。

!init-2.png!

你可通过 git add 命令来实现对指定文件的跟踪，然后执行 git commit 提交：

>$ git add *.txt
>$ git commit -m 'init'

或者

!commit.png!
!commit-2.png!

现在，得到了一个跟踪若干文件的 Git 仓库。

*第二种是从一个服务器克隆一个现有的 Git 仓库。*
>$ git clone //10.91.16.252/tmp/liqb/GitDemo

或者
!clone.png!
!clone-1.png!
!clone-2.png!

可以看到，Git克隆的是该Git仓库服务器上的几乎所有数据，默认配置下远程Git仓库中的每一个文件的每一个版本都将被拉取下来。

事实上，如果你的服务器的磁盘坏掉了，你通常可以使用任何一个克隆下来的用户端来重建服务器上的仓库。